<?php

/**
 * Banco
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class Banco extends BaseBanco
{
	
	// todos los cheques del banco y la cuenta pendiente de acreditar	
	public function GetPendienteAcreditar()
	{
		$query	=	"
        	select sum(c.importe) Pendiente
        	from cheque c
        	where c.estado='Pendiente acreditar'
        	and c.fechaanulacion is null
        	and c.cuenta = ".$this->NumeroDeCuenta."
        	";
        
        	//Assume that you have connected to a database instance...
        	$statement = Doctrine_Manager::getInstance()->connection();
        	//$results = $statement->execute("SELECT * FROM paciente WHERE id = ?", array(1));
        	$results = $statement->execute($query);
        	$dataset	=	$results->fetchAll();
        	//var_dump($dataset);
        	return number_format($dataset[0]['Pendiente'],2,'.','');
	}
	
	// todos los cheques del banco y la cuenta pendiente de debitar
	public function GetPendienteDebitar()
	{
		$query	=	"
        	select sum(c.importe) Pendiente
        	from cheque c
        	where c.estado='Pendiente debitar'
        	and c.fechaanulacion is null
        	and c.cuenta = ".$this->NumeroDeCuenta."
        	";
        
        	//Assume that you have connected to a database instance...
        	$statement = Doctrine_Manager::getInstance()->connection();
        	//$results = $statement->execute("SELECT * FROM paciente WHERE id = ?", array(1));
        	$results = $statement->execute($query);
        	$dataset	=	$results->fetchAll();
        	//var_dump($dataset);
        	return number_format($dataset[0]['Pendiente'],2,'.','');
	}
	
	public function GetProximoNumeroDeCheque()
	{
		if($this->UltimoNumeroCheque > 0)
			return $this->UltimoNumeroCheque + 1;
		
		return 1;
	}
	
	public function GetFirmanteDeCheques()
	{
		return 'Martin Zaszczynsk';
	}
	
	public function ActualizarUltimoNumeroDeCheque()
	{
		$this->UltimoNumeroCheque = $this->UltimoNumeroCheque + 1;
		$this->save();
	}
	
	public function AnularItemCuentaCorriente($itemid)
	{
		$ctacte	=	new Classes_CuentaCorrienteManager();
		
		$ctacte->AnularItemCuentaCorriente($itemid);
	}
}