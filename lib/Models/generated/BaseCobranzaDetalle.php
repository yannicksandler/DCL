<?php

/**
 * BaseCobranzaDetalle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property decimal $Importe
 * @property string $Detalle
 * @property date $FechaCheque
 * @property integer $CobranzaId
 * @property integer $PagoTipoId
 * @property char $RetencionUtilizada
 * @property integer $ChequeId
 * @property integer $BancoCuentaCorrienteId
 * @property Cobranza $Cobranza
 * @property PagoTipo $PagoTipo
 * @property Cheque $Cheque
 * @property BancoCuentaCorriente $BancoCuentaCorriente
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseCobranzaDetalle extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('cobranza_detalle');
        $this->hasColumn('Id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('Importe', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'notnull' => true,
             'length' => '10',
             ));
        $this->hasColumn('Detalle', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('FechaCheque', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('CobranzaId', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('PagoTipoId', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('RetencionUtilizada', 'char', 2, array(
             'type' => 'char',
             'default' => 'NO',
             'length' => '2',
             ));
        $this->hasColumn('ChequeId', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('BancoCuentaCorrienteId', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));


        $this->index('fk_CobranzaLiquidacion_Cobranza1', array(
             'fields' => 
             array(
              0 => 'CobranzaId',
             ),
             ));
        $this->index('fk_CobranzaLiquidacion_pago_tipo1', array(
             'fields' => 
             array(
              0 => 'PagoTipoId',
             ),
             ));
        $this->index('fk_CobranzaLiquidacion_Cheque', array(
             'fields' => 
             array(
              0 => 'ChequeId',
             ),
             ));
        $this->option('collate', 'utf8_spanish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cobranza', array(
             'local' => 'CobranzaId',
             'foreign' => 'Id'));

        $this->hasOne('PagoTipo', array(
             'local' => 'PagoTipoId',
             'foreign' => 'Id'));

        $this->hasOne('Cheque', array(
             'local' => 'ChequeId',
             'foreign' => 'Id'));

        $this->hasOne('BancoCuentaCorriente', array(
             'local' => 'BancoCuentaCorrienteId',
             'foreign' => 'Id'));
    }
}