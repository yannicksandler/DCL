<?php

/**
 * BasePresupuesto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property date $Fecha
 * @property string $Destinatario
 * @property string $PlazoDeEntregaComentario
 * @property integer $PlazoDeEntrega
 * @property string $FormasDePago
 * @property string $LugarDeEntrega
 * @property clob $Comentario
 * @property integer $Cantidad1
 * @property string $Detalle1
 * @property decimal $Importe1
 * @property integer $Cantidad2
 * @property string $Detalle2
 * @property decimal $Importe2
 * @property integer $Cantidad3
 * @property string $Detalle3
 * @property decimal $Importe3
 * @property date $FechaAprobacion
 * @property Doctrine_Collection $OrdenDeTrabajo
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BasePresupuesto extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('presupuesto');
        $this->hasColumn('Id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('Fecha', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('Destinatario', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('PlazoDeEntregaComentario', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('PlazoDeEntrega', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('FormasDePago', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('LugarDeEntrega', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('Comentario', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('Cantidad1', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('Detalle1', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('Importe1', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => '10',
             ));
        $this->hasColumn('Cantidad2', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('Detalle2', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('Importe2', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => '10',
             ));
        $this->hasColumn('Cantidad3', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('Detalle3', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('Importe3', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => '10',
             ));
        $this->hasColumn('FechaAprobacion', 'date', null, array(
             'type' => 'date',
             ));

        $this->option('collate', 'utf8_spanish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('OrdenDeTrabajo', array(
             'local' => 'Id',
             'foreign' => 'PresupuestoId'));
    }
}