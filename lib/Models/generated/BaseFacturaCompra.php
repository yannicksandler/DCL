<?php

/**
 * BaseFacturaCompra
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $NumeroInterno
 * @property string $Numero
 * @property integer $ProveedorId
 * @property integer $TipoIvaId
 * @property date $Fecha
 * @property decimal $Importe
 * @property decimal $ImporteNetoNoGravado
 * @property decimal $ImporteNetoGravado21
 * @property decimal $ImporteNetoGravado27
 * @property decimal $ImporteNetoGravado10_5
 * @property decimal $ImporteIva21
 * @property decimal $ImporteIva27
 * @property decimal $ImporteIva10_5
 * @property decimal $ImportePercepcionesIva
 * @property decimal $ImporteCreditoACuenta
 * @property decimal $ImportePercepcionesIngresosBrutosCaba
 * @property decimal $ImportePercepcionesIngresosBrutosBsAs
 * @property clob $Comentario
 * @property char $PendienteDePago
 * @property date $FechaAnulacion
 * @property date $FechaVencimiento
 * @property integer $TipoGastoId
 * @property string $TipoNota
 * @property Proveedor $Proveedor
 * @property TipoIva $TipoIva
 * @property TipoGasto $TipoGasto
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseFacturaCompra extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('factura_compra');
        $this->hasColumn('NumeroInterno', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('Numero', 'string', 255, array(
             'type' => 'string',
             'primary' => true,
             'length' => '255',
             ));
        $this->hasColumn('ProveedorId', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('TipoIvaId', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('Fecha', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('Importe', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'notnull' => true,
             'length' => '10',
             ));
        $this->hasColumn('ImporteNetoNoGravado', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => '10',
             ));
        $this->hasColumn('ImporteNetoGravado21', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => '10',
             ));
        $this->hasColumn('ImporteNetoGravado27', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'length' => '10',
             ));
        $this->hasColumn('ImporteNetoGravado10_5', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'length' => '10',
             ));
        $this->hasColumn('ImporteIva21', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => '10',
             ));
        $this->hasColumn('ImporteIva27', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'length' => '10',
             ));
        $this->hasColumn('ImporteIva10_5', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'length' => '10',
             ));
        $this->hasColumn('ImportePercepcionesIva', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'length' => '10',
             ));
        $this->hasColumn('ImporteCreditoACuenta', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'length' => '10',
             ));
        $this->hasColumn('ImportePercepcionesIngresosBrutosCaba', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'length' => '10',
             ));
        $this->hasColumn('ImportePercepcionesIngresosBrutosBsAs', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'length' => '10',
             ));
        $this->hasColumn('Comentario', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('PendienteDePago', 'char', 2, array(
             'type' => 'char',
             'default' => 'SI',
             'length' => '2',
             ));
        $this->hasColumn('FechaAnulacion', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('FechaVencimiento', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('TipoGastoId', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('TipoNota', 'string', 2, array(
             'type' => 'string',
             'length' => '2',
             ));


        $this->index('fk_FacturaCompra_proveedor', array(
             'fields' => 
             array(
              0 => 'ProveedorId',
             ),
             ));
        $this->index('fk_FacturaCompra_TipoIva1', array(
             'fields' => 
             array(
              0 => 'TipoIvaId',
             ),
             ));
        $this->index('fk_FacturaCompra_TipoGasto1', array(
             'fields' => 
             array(
              0 => 'TipoGastoId',
             ),
             ));
        $this->option('collate', 'utf8_spanish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Proveedor', array(
             'local' => 'ProveedorId',
             'foreign' => 'Id'));

        $this->hasOne('TipoIva', array(
             'local' => 'TipoIvaId',
             'foreign' => 'Id'));

        $this->hasOne('TipoGasto', array(
             'local' => 'TipoGastoId',
             'foreign' => 'Id'));
    }
}