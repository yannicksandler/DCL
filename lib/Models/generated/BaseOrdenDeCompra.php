<?php

/**
 * BaseOrdenDeCompra
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property timestamp $Fecha
 * @property decimal $Importe
 * @property integer $TipoIvaId
 * @property integer $ProveedorId
 * @property integer $OrdenDePagoId
 * @property string $MotivoAnulacion
 * @property timestamp $FechaAnulacion
 * @property timestamp $FechaDeEntrega
 * @property string $CondicionesDePago
 * @property char $PendienteDePago
 * @property OrdenDePago $OrdenDePago
 * @property TipoIva $TipoIva
 * @property Proveedor $Proveedor
 * @property Doctrine_Collection $Insumo
 * @property Doctrine_Collection $OrdenDePagoOrdenDeCompra
 * @property Doctrine_Collection $FacturaCompraOrdenesDeCompras
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseOrdenDeCompra extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('orden_de_compra');
        $this->hasColumn('Id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('Fecha', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('Importe', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => '10',
             ));
        $this->hasColumn('TipoIvaId', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('ProveedorId', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('OrdenDePagoId', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('MotivoAnulacion', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('FechaAnulacion', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('FechaDeEntrega', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('CondicionesDePago', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('PendienteDePago', 'char', 2, array(
             'type' => 'char',
             'default' => 'SI',
             'length' => '2',
             ));
        $this->hasColumn('ImporteCompensatorio', 'decimal', 10, array(
            'type' => 'decimal',
            'scale' => 2,
            'length' => '10',
        ));


        $this->index('fk_OrdenDeCompra_Proveedor', array(
             'fields' => 
             array(
              0 => 'ProveedorId',
             ),
             ));
        $this->index('fk_OrdenDeCompra_TipoIva', array(
             'fields' => 
             array(
              0 => 'TipoIvaId',
             ),
             ));
        $this->option('collate', 'utf8_spanish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('OrdenDePago', array(
             'local' => 'OrdenDePagoId',
             'foreign' => 'Id'));

        $this->hasOne('TipoIva', array(
             'local' => 'TipoIvaId',
             'foreign' => 'Id'));

        $this->hasOne('Proveedor', array(
             'local' => 'ProveedorId',
             'foreign' => 'Id'));

        $this->hasMany('Insumo', array(
             'local' => 'Id',
             'foreign' => 'OrdenDeCompraId'));

        $this->hasMany('OrdenDePagoOrdenDeCompra', array(
             'local' => 'Id',
             'foreign' => 'OrdenDeCompraId'));

        $this->hasMany('FacturaCompraOrdenDeCompra as FacturaCompraOrdenesDeCompras', array(
             'local' => 'Id',
             'foreign' => 'OrdenDeCompraId'));
    }
}