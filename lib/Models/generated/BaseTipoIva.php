<?php

/**
 * BaseTipoIva
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property string $Nombre
 * @property string $Abreviatura
 * @property decimal $Discriminado
 * @property decimal $Adicional
 * @property decimal $Incluido
 * @property string $Letra_comp
 * @property Doctrine_Collection $Clientes
 * @property Doctrine_Collection $Proveedores
 * @property Doctrine_Collection $OrdenesDeCompra
 * @property Doctrine_Collection $Facturas
 * @property Doctrine_Collection $FacturasCompra
 * @property Doctrine_Collection $NotasDebito
 * @property Doctrine_Collection $NotasCredito
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseTipoIva extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('tipo_iva');
        $this->hasColumn('Id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('Nombre', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('Abreviatura', 'string', 5, array(
             'type' => 'string',
             'length' => '5',
             ));
        $this->hasColumn('Discriminado', 'decimal', 5, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => '5',
             ));
        $this->hasColumn('Adicional', 'decimal', 5, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => '5',
             ));
        $this->hasColumn('Incluido', 'decimal', 5, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => '5',
             ));
        $this->hasColumn('Letra_comp', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '1',
             ));

        $this->option('collate', 'utf8_spanish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Cliente as Clientes', array(
             'local' => 'Id',
             'foreign' => 'TipoIvaId'));

        $this->hasMany('Proveedor as Proveedores', array(
             'local' => 'Id',
             'foreign' => 'TipoIvaId'));

        $this->hasMany('OrdenDeCompra as OrdenesDeCompra', array(
             'local' => 'Id',
             'foreign' => 'TipoIvaId'));

        $this->hasMany('Factura as Facturas', array(
             'local' => 'Id',
             'foreign' => 'TipoIvaId'));

        $this->hasMany('FacturaCompra as FacturasCompra', array(
             'local' => 'Id',
             'foreign' => 'TipoIvaId'));

        $this->hasMany('NotaDebito as NotasDebito', array(
             'local' => 'Id',
             'foreign' => 'TipoIvaId'));

        $this->hasMany('NotaCredito as NotasCredito', array(
             'local' => 'Id',
             'foreign' => 'TipoIvaId'));
    }
}